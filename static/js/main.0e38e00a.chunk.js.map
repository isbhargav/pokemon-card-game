{"version":3,"sources":["Components/Navbar.js","Components/PokedexResult.js","Components/Search.js","Hooks/usePokdexfetch.js","Components/Team.js","App.js","index.js"],"names":["Navbar","Box","bg","shadow","roundedBottom","Heading","size","as","fontFamily","textAlign","fontStyle","color","PokedexResult","data","setTeam","Grid","templateColumns","gap","m","mt","map","d","w","key","id","Flex","justifyContent","Image","src","sprites","front_default","Text","name","Button","leftIcon","onClick","e","s","add","Search","useState","query","setQuery","queryResult","setQueryResult","pokedex","setPokedex","offset","setOffset","useAsync","a","URL","fetch","res","json","data1","pokedata","results","url","then","Promise","all","console","log","usePokdexfetch","state","loadRef","useRef","intersection","useIntersection","root","rootMargin","threshold","useEffect","value","intersectionRatio","handleClick","Stack","alignItems","spacing","my","isInline","Input","variant","placeholder","onChange","target","width","variantColor","length","ref","Spinner","thickness","speed","emptyColor","Team","team","idx","filter","sd","remove","App","ReactDOM","render","ThemeProvider","CSSReset","document","getElementById"],"mappings":"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","file":"static/js/main.0e38e00a.chunk.js","sourcesContent":["import React from 'react'\nimport { Box, Heading } from \"@chakra-ui/core\";\n\nexport default function Navbar() {\n    return (\n        <Box bg='blue.300' shadow='md' roundedBottom='md'>\n            <Heading size='2xl' as='h1' fontFamily='comic-sans' textAlign='center' fontStyle='italic' color='white'>Pokémon</Heading>\n        </Box>\n\n    );\n}","import React from 'react'\nimport { Grid, Box, Image, Text, Flex, Button } from '@chakra-ui/core'\n\nexport default function PokedexResult({ data, setTeam }) {\n\n    const add = (d) => { setTeam(s => [...s, d]) };\n\n\n    return (\n        <Grid templateColumns=\"repeat(5, 1fr)\" gap={2} m={4} mt={5}>\n            {data.map((d) => (<Box w=\"100%\" key={d.id} shadow='sm' >\n                <Flex justifyContent='center'><Image src={d.sprites.front_default}></Image></Flex>\n                <Text textAlign='center'>{d.name}</Text>\n                <Flex justifyContent='center' m={5}>\n                    <Button leftIcon='add' size='lg' onClick={e => add(d)}>Add</Button>\n                </Flex>\n            </Box>))}\n\n\n\n        </Grid>\n    )\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport { useIntersection } from 'react-use'\nimport { Spinner, Button, Input, Stack, Box, Heading, Flex } from '@chakra-ui/core'\nimport PokedexResult from './PokedexResult'\nimport usePokdexfetch from '../Hooks/usePokdexfetch'\nimport '../assets/names.json'\n\nexport default function Search({ setTeam }) {\n    const [query, setQuery] = useState('');\n    const [queryResult, setQueryResult] = useState([]);\n    const [pokedex, setPokedex] = useState([]);\n    const [state, setOffset] = usePokdexfetch();\n\n\n    const loadRef = useRef();\n    const intersection = useIntersection(loadRef, {\n        root: null,\n        rootMargin: '0px',\n        threshold: 1\n    })\n\n    // when fetch is complete add data to pokedex\n    useEffect(() => {\n        if (state.value) { setPokedex(s => [...s, ...state.value]); console.log(state.value) }\n    }, [setPokedex, state.value]);\n\n    // when we reach bottom increase offset to trigger usePokdexfetch\n    useEffect(() => {\n        if (intersection && intersection.intersectionRatio === 1) {\n            setOffset(s => s + 20)\n        }\n    }, [intersection, setOffset])\n\n    useEffect(() => {\n        setQueryResult([])\n    }, [query])\n\n\n\n    const handleClick = async () => {\n        const url = 'https://pokeapi.co/api/v2/pokemon/';\n        try {\n            const res = await fetch(url + query);\n            const data = await res.json();\n            setQueryResult([data])\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    return (\n        <>\n            <Stack alignItems='center' spacing={4} my={4}>\n                <Box>\n                    <Heading >PokéDéx</Heading>\n                </Box>\n                <Stack isInline>\n                    <Input variant=\"filled\" placeholder=\"Pikachu\" value={query} onChange={e => setQuery(e.target.value)} width={300} />\n                    <Button variantColor=\"teal\" size=\"md\" onClick={handleClick}>Search</Button>\n                </Stack>\n\n            </Stack>\n            {query.length > 0 ? null : <PokedexResult data={pokedex} setTeam={setTeam} />}\n            {query.length > 0 ? (queryResult.length > 0 ? <PokedexResult data={queryResult} setTeam={setTeam} /> : null) : null}\n            <div ref={loadRef}></div>\n            <Flex justifyContent='center'>\n\n                {query.length > 0 && queryResult.length > 0 ? null : <Spinner\n                    thickness=\"4px\"\n                    speed=\"0.85s\"\n                    emptyColor=\"gray.200\"\n                    color=\"blue.500\"\n                    size=\"xl\"\n                />}\n            </Flex>\n        </>\n\n    )\n}\n","import React, { useState } from 'react'\nimport { useAsync } from 'react-use'\nexport default function usePokdexfetch() {\n    const [offset, setOffset] = useState(0);\n\n    //load inital pokemons\n    const state = useAsync(async () => {\n        const URL = `https://pokeapi.co/api/v2/pokemon?limit=20&offset=${offset}`\n        const res = await fetch(URL);\n        const data1 = await res.json();\n        const pokedata = data1.results.map(d => fetch(d.url).then(d => d.json()))\n        const data = await Promise.all(pokedata)\n        console.log(\"hiwm\")\n        return data;\n    }, [offset])\n\n    return [state, setOffset];\n\n}","import React from 'react'\nimport { Box, Grid, Button, Text, Flex, Image } from '@chakra-ui/core'\nexport default function Team({ team, setTeam }) {\n    const remove = (idx) => { setTeam(s => s.filter((sd, id) => id !== idx)) };\n    return (\n        <Grid templateColumns=\"repeat(6, 1fr)\" gap={2} m={4} mt={5}>\n            {team.map((d, idx) => (<Box w=\"100%\" key={d.id} shadow='sm' >\n                <Flex justifyContent='center'><Image src={d.sprites.front_default}></Image></Flex>\n                <Text textAlign='center'>{d.name}</Text>\n                <Flex justifyContent='center' m={5}>\n                    <Button leftIcon='minus' size='lg' onClick={e => remove(idx)}>Remove</Button>\n                </Flex>\n            </Box>))}\n\n\n\n        </Grid>\n    )\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { Box, Skeleton } from '@chakra-ui/core'\nimport Navbar from './Components/Navbar'\nimport Search from './Components/Search'\nimport Team from './Components/Team'\nimport { useIntersection } from 'react-use';\n\n\n\nfunction App() {\n  const [team, setTeam] = useState([]);\n\n\n \n\n\n\n  return (\n    <Box bg='grey.400'>\n      <Navbar />\n      <Team team={team} setTeam={setTeam} />\n      <Search setTeam={setTeam}/>\n\n    </Box>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ThemeProvider, CSSReset } from '@chakra-ui/core'\n\nReactDOM.render(\n  <ThemeProvider>\n    <CSSReset />\n    <App />\n  </ThemeProvider>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}